import Client from '../client';
export declare enum AddressType {
    v4 = "v4",
    v6 = "v6",
    private_v6 = "private_v6",
    shared_v4 = "shared_v4"
}
export interface AllocateIPAddressInput {
    appId: string;
    type: AddressType;
    organizationId?: string;
    region?: string;
    network?: string;
}
export interface AllocateIPAddressOutput {
    allocateIpAddress: {
        ipAddress: {
            id: string;
            address: string;
            type: AddressType;
            region: string;
            createdAt: string;
        } | null;
    };
}
export interface ReleaseIPAddressInput {
    appId?: string;
    ipAddressId?: string;
    ip?: string;
}
export interface ReleaseIPAddressOutput {
    releaseIpAddress: {
        app: {
            name: string;
        };
    };
}
export declare class Network {
    private client;
    constructor(client: Client);
    allocateIpAddress(input: AllocateIPAddressInput): Promise<AllocateIPAddressOutput>;
    releaseIpAddress(input: ReleaseIPAddressInput): Promise<ReleaseIPAddressOutput>;
}
//# sourceMappingURL=network.d.ts.map