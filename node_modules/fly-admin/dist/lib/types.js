"use strict";
/* eslint-disable */
/* tslint:disable */
/*
 * ---------------------------------------------------------------
 * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##
 * ##                                                           ##
 * ## AUTHOR: acacode                                           ##
 * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##
 * ---------------------------------------------------------------
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MachinesWaitParams1StateEnum = exports.StateEnum = exports.ApiMachineRestartPolicyEnum = exports.SignalRequestSignalEnum = exports.MainStatusCode = void 0;
var MainStatusCode;
(function (MainStatusCode) {
    MainStatusCode["Unknown"] = "unknown";
    MainStatusCode["CapacityErr"] = "insufficient_capacity";
})(MainStatusCode = exports.MainStatusCode || (exports.MainStatusCode = {}));
var SignalRequestSignalEnum;
(function (SignalRequestSignalEnum) {
    SignalRequestSignalEnum["SIGABRT"] = "SIGABRT";
    SignalRequestSignalEnum["SIGALRM"] = "SIGALRM";
    SignalRequestSignalEnum["SIGFPE"] = "SIGFPE";
    SignalRequestSignalEnum["SIGHUP"] = "SIGHUP";
    SignalRequestSignalEnum["SIGILL"] = "SIGILL";
    SignalRequestSignalEnum["SIGINT"] = "SIGINT";
    SignalRequestSignalEnum["SIGKILL"] = "SIGKILL";
    SignalRequestSignalEnum["SIGPIPE"] = "SIGPIPE";
    SignalRequestSignalEnum["SIGQUIT"] = "SIGQUIT";
    SignalRequestSignalEnum["SIGSEGV"] = "SIGSEGV";
    SignalRequestSignalEnum["SIGTERM"] = "SIGTERM";
    SignalRequestSignalEnum["SIGTRAP"] = "SIGTRAP";
    SignalRequestSignalEnum["SIGUSR1"] = "SIGUSR1";
})(SignalRequestSignalEnum = exports.SignalRequestSignalEnum || (exports.SignalRequestSignalEnum = {}));
/**
 * * no - Never try to restart a Machine automatically when its main process exits, whether thatâ€™s on purpose or on a crash.
 * * always - Always restart a Machine automatically and never let it enter a stopped state, even when the main process exits cleanly.
 * * on-failure - Try up to MaxRetries times to automatically restart the Machine if it exits with a non-zero exit code. Default when no explicit policy is set, and for Machines with schedules.
 */
var ApiMachineRestartPolicyEnum;
(function (ApiMachineRestartPolicyEnum) {
    ApiMachineRestartPolicyEnum["No"] = "no";
    ApiMachineRestartPolicyEnum["Always"] = "always";
    ApiMachineRestartPolicyEnum["OnFailure"] = "on-failure";
})(ApiMachineRestartPolicyEnum = exports.ApiMachineRestartPolicyEnum || (exports.ApiMachineRestartPolicyEnum = {}));
/** desired state */
var StateEnum;
(function (StateEnum) {
    StateEnum["Started"] = "started";
    StateEnum["Stopped"] = "stopped";
    StateEnum["Destroyed"] = "destroyed";
})(StateEnum = exports.StateEnum || (exports.StateEnum = {}));
/** desired state */
var MachinesWaitParams1StateEnum;
(function (MachinesWaitParams1StateEnum) {
    MachinesWaitParams1StateEnum["Started"] = "started";
    MachinesWaitParams1StateEnum["Stopped"] = "stopped";
    MachinesWaitParams1StateEnum["Destroyed"] = "destroyed";
})(MachinesWaitParams1StateEnum = exports.MachinesWaitParams1StateEnum || (exports.MachinesWaitParams1StateEnum = {}));
